.Post {
  display: flex;
  padding: 1rem;
  background-color: var(--backgroundCard);
  border-radius: 1rem;
  /* border: 1px solid rgba(154, 203, 208, 0.5); */
  gap: 1rem;
  box-shadow: var(--shadowLight);
}

.Post > img {
  border-radius: 50%;
  width: 3rem;
  height: 3rem;
  border: 2px solid var(--accentPhoto);
}

.Post > div {
  display: flex;
  flex-direction: column;
  width: 90%;
  gap: 1rem;
}

.name-detail {
  display: flex;
  flex-direction: column;
}
.name-detail > div {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.5rem;
}
.p-date {
  font-size: 0.8rem;
  color: var(--secondaryText);
}
.name-detail > div > div {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.post-detail {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
.postImages {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
  margin-top: 10px;
  flex-wrap: wrap;
}
.postImageContainer {
  position: relative;
  cursor: pointer;
}
/* Case 1: Single image */
.postImages:has(> .postImageContainer:nth-child(1):nth-last-child(1)) {
  display: block; /* Override flex to make it full width */
}

.postImages:has(> .postImageContainer:nth-child(1):nth-last-child(1))
  .postImageContainer {
  width: 100%; /* Full width for single image */
}

/* Case 2: Two images */
.postImages:has(> .postImageContainer:nth-child(2):nth-last-child(1))
  .postImageContainer {
  width: calc(50% - 5px); /* Two images side by side, accounting for gap */
}

/* Case 3 or more images: Grid layout */
.postImages:has(> .postImageContainer:nth-child(3)) {
  display: grid;
  grid-template-columns: repeat(2, 1fr); /* Two columns for grid */
  gap: 10px;
  width: 100%;
}

/* Adjust the width of images in the grid */
.postImages:has(> .postImageContainer:nth-child(3)) .postImageContainer {
  width: 100%; /* Each image takes full width of its grid cell */
}

/* For exactly 3 images: Adjust the layout to have the third image span both columns */
.postImages:has(> .postImageContainer:nth-child(3):nth-last-child(1))
  .postImageContainer:nth-child(3) {
  grid-column: span 2; /* Third image spans both columns */
}

/* For 4 or more images: Limit to 4 images in the grid */
.postImages:has(> .postImageContainer:nth-child(5))
  .postImageContainer:nth-child(n + 5) {
  display: none; /* Hide images beyond the 4th */
}
.postImage {
  width: 100%;
  max-height: 20rem;
  object-fit: contain;
  border-radius: 0.8rem;
}
.postImage:hover {
  opacity: 0.9;
}
.extraImagesOverlay {
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.8rem;
}
.extraImagesText {
  color: white;
  font-size: 1.5rem;
  font-weight: bold;
}
.postReact {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1.5rem;
}
.postReact > :nth-child(1) {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
.postReact > :nth-child(1) > span,
.postReact > :nth-child(2) {
  font-size: 0.8rem;
  color: var(--secondaryText);
}

.menu-container {
  position: relative;
}
.post-menu {
  position: absolute;
  top: 30px;
  right: 0;
  background: var(--backgroundCard);
  border-radius: 8px;
  box-shadow: var(--shadowLight);
  padding: 10px;
  width: 200px;
  z-index: 1000;
}

.menu-item {
  display: flex;
  align-items: center;
  padding: 8px;
  gap: 10px;
  cursor: pointer;
  transition: background 0.2s;
}

.menu-item:hover {
  background: var(--backgroundInput);
}
.edit-container {
  width: 100%;
}

.edit-input {
  width: 100%;
  min-height: 100px;
  padding: 8px;
  border: 1px solid var(--borderColor);
  border-radius: 6px;
  resize: vertical;
}

.save-btn,
.cancel-btn {
  padding: 6px 12px;
  border-radius: 4px;
  color: white;
  border: none;
  cursor: pointer;
  margin-right: 0.5rem;
  transition: background-color 0.3s;
}

.save-btn {
  background-color: var(--buttonPrimary);
}

.save-btn:hover {
  background-color: var(--backgroundInput);
}

.cancel-btn {
  background-color: var(--backgroundInput);
}

.cancel-btn:hover {
  background-color: var(--deepBlue);
}

.lightboxModal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.9);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.lightboxContent {
  max-width: 90%;
  max-height: 90%;
}

.closeLightbox {
  position: absolute;
  top: 20px;
  right: 20px;
  color: white;
  font-size: 30px;
  cursor: pointer;
  background: none;
  border: none;
  transition: color 0.3s;
}

.closeLightbox:hover {
  color: var(--backgroundBase);
}

@media (max-width: 768px) {
  .Post {
    padding: 0.5rem;
  }

  .Post > img {
    width: 2.5rem;
    height: 2.5rem;
  }

  .postImage {
    max-height: 15rem;
  }

  .postImages {
    gap: 8px;
  }
  /* Adjust for two images on smaller screens */
  .postImages:has(> .postImageContainer:nth-child(2):nth-last-child(1))
    .postImageContainer {
    width: calc(50% - 4px); /* Adjust gap for smaller screens */
  }

  /* Adjust for three or more images on smaller screens */
  .postImages:has(> .postImageContainer:nth-child(3)) {
    gap: 8px; /* Adjust gap for smaller screens */
  }
  .closeLightbox {
    top: 10px;
    right: 10px;
    font-size: 25px;
  }
}
